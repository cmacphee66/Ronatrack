{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","confirm","total","date","reportDate","Charts","useState","setDailyData","useEffect","fetchAPI","lineCharts","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b7f16d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\n  if(!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n             <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n             <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url =  'https://covid19.mathdro.id/api'\n\nexport const fetchData = async () => {\n  try {\n     const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n\n    return { confirmed, recovered, deaths, lastUpdate, };\n  } catch (error) {\n    return error;\n  }\n}\n\n\nexport const fetchDailyData = async () => {\n  try {\n\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirm.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }))\n\n    return modifiedData;\n  } catch (error) {\n\n  }\n}\n  \n  ","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Charts.module.css'\n\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  });\n\n const lineCharts = (\n    dailyData ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {lineCharts}\n    </div>\n  )\n}\n\nexport default Charts;","import React from 'react';\n\nconst CountryPicker = () => {\n  return (\n    <h1>CountryPicker</h1>\n  )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Charts, CountryPicker } from './components'\nimport styles from './App.module.css';\nimport { fetchData } from './api';  //no need to specify index\n\nclass App extends React.Component {\n  state = {\n    data: {}\n  }\n\n  async componentDidMount() {             //async infront of \"componentDidMount\"\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData })\n  } \n  render() {\n    const { data } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker />\n        <Charts />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}